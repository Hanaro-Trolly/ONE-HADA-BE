plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}


group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-websocket', version: '3.0.5'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	runtimeOnly 'com.h2database:h2'

	implementation 'org.springframework.boot:spring-boot-starter-data-neo4j'
	implementation 'org.springframework.boot:spring-boot-starter'

	implementation 'org.neo4j.driver:neo4j-java-driver'


	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	implementation 'org.springframework.boot:spring-boot-starter-validation'

	testImplementation 'org.testcontainers:junit-jupiter:1.19.3'
	testImplementation 'org.testcontainers:testcontainers:1.19.3'

	//DateTime 직렬화
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.0'
	//스웨거
	implementation "org.springdoc:springdoc-openapi-starter-common:2.3.0"
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0"
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	finalizedBy jacocoTestReport

	jacoco {
		excludes += [
				"com/example/onehada/db/**",
				"com/example/onehada/websocket/**"
		]
	}
}
jacocoTestReport {
	dependsOn test
	reports {
		html.required.set(true)
	}
	afterEvaluate {

		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it,
					exclude: [
							"com/example/onehada/db/**",
							"com/example/onehada/websocket/**"])
		}))
	}
}
check.dependsOn jacocoTestReport

jacocoTestCoverageVerification {
	violationRules {
		rule {
			element = 'CLASS'

			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				minimum = 0.80
			}
		}
	}
}
