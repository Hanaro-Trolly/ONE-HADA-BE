name: CI/CD Pipeline for ONEHADA_BE

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # 프로젝트 디렉토리로 이동
            cd /home/${{ secrets.EC2_USERNAME }} || exit 1

            # Git 리포지토리 클론 (리포지토리가 없다면)
            if [ ! -d "ONE-HADA-BE/.git" ]; then
              git clone https://github.com/Hanaro-Trolly/ONE-HADA-BE.git
            fi

            cd ONE-HADA-BE || exit 1

            # 최신 코드 가져오기
            git fetch origin || exit 1
            git reset --hard origin/master || exit 1

            # 환경변수 설정
            cd ./src/main/resources || exit 1
            echo "${{ secrets.APPLICATION_YML }}" > application.yml || exit 1
            cd ../../.. || exit 1

            # Gradle 빌드 (테스트 제외)
            ./gradlew clean build -x test || exit 1

            # 애플리케이션 실행
            # 이전에 실행 중인 프로세스 종료 (정확한 프로세스를 종료)
            PID=$(pgrep -f 'java -jar build/libs/onehada-be-*.jar')
            if [ -n "$PID" ]; then
              kill -9 $PID
            fi

            # 새로운 애플리케이션 실행 (nohup 로그 추가)
            nohup java -jar build/libs/onehada-be-*.jar > /home/${{ secrets.EC2_USERNAME }}/app.log 2>&1 &

            # 애플리케이션 실행 확인 (10초 대기 후 확인)
            sleep 10
            ps aux | grep 'java -jar' || exit 1

            # 프로세스가 백그라운드에서 제대로 실행되고 있는지 확인
            if ! ps aux | grep -q '[j]ava -jar build/libs/onehada-be-*.jar'; then
              echo "Application failed to start" && exit 1
            fi

            exit 0
